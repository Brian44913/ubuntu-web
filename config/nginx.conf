user www;
worker_processes auto;
pid /run/nginx.pid;
error_log /data/logs/nginx_error/error.log;

events {
	use epoll;
	worker_connections 51200;
	multi_accept on;
}

http {
	types_hash_max_size 2048;
	include /etc/nginx/mime.types;
	default_type application/octet-stream;
	server_names_hash_bucket_size 128;
	client_header_buffer_size 32k;
	large_client_header_buffers 4 32k;
	client_max_body_size 100m; # 根据需求调整
	client_body_buffer_size 1m; # 根据需求调整
	sendfile on;
	tcp_nopush on;
	keepalive_timeout 65; # 优化连接保持时间
	server_tokens off;
	tcp_nodelay on;

	fastcgi_connect_timeout 60; # 根据需求调整
	fastcgi_send_timeout 60; # 根据需求调整
	fastcgi_read_timeout 60; # 根据需求调整
	fastcgi_buffer_size 64k;
	fastcgi_buffers 4 64k;
	fastcgi_busy_buffers_size 128k;
	fastcgi_temp_file_write_size 128k;
	fastcgi_intercept_errors on;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	# access_log /data/logs/nginx_access/access.log main;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_buffers 16 8k;
	gzip_comp_level 6;
	gzip_http_version 1.1;
	gzip_min_length 256;
	gzip_proxied any;
	gzip_vary on;
	gzip_types
		text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
		text/javascript application/javascript application/x-javascript
		text/x-json application/json application/x-web-app-manifest+json
		text/css text/plain text/x-component
		font/opentype application/x-font-ttf application/vnd.ms-fontobject
		image/x-icon;

	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

	log_format json escape=json '{"@timestamp":"$time_iso8601",'
                      '"server_addr":"$server_addr",'
                      '"remote_addr":"$remote_addr",'
                      '"scheme":"$scheme",'
                      '"request_method":"$request_method",'
                      '"request_uri": "$request_uri",'
                      '"request_length": "$request_length",'
                      '"uri": "$uri", '
                      '"request_time":$request_time,'
                      '"body_bytes_sent":$body_bytes_sent,'
                      '"bytes_sent":$bytes_sent,'
                      '"status":"$status",'
                      '"upstream_time":"$upstream_response_time",'
                      '"upstream_host":"$upstream_addr",'
                      '"upstream_status":"$upstream_status",'
                      '"host":"$host",'
                      '"http_referer":"$http_referer",'
                      '"http_user_agent":"$http_user_agent"'
                      '}';
	##
	# Virtual Host Configs
	##

	# 默认的 443 端口，用来捕获所有未处理的请求
	server {
		listen 443 ssl default_server;
		server_name _;

		ssl_certificate /etc/nginx/ssl/dummy.crt;
		ssl_certificate_key /etc/nginx/ssl/dummy.key;

		root /data/wwwroot/default;
		index index.php index.html index.htm;
		access_log /data/logs/nginx_access/default-443.log json;
		error_log /data/logs/nginx_error/default-443.log notice;

		error_page  404              /404.html;
		error_page  500 502 503 504  /50x.html;
		location = /50x.html {
			root   /usr/share/nginx/html;
		}
		# 默认的 location 块
		location / {
			try_files $uri $uri/ =404;
		}
		# 处理 PHP 文件的 location 块
		location ~ ^/phpdir/ {
			location ~ \.php$ {
				fastcgi_pass unix:/run/php/php8.3-fpm.sock;
				fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
				include fastcgi_params;
			}
		}

		location ~ /\.ht {
		    deny  all;
		}
	}

	# 默认的 80 端口，用来捕获所有未处理的请求
	server {
		listen 80 default_server;
		server_name _;

		root /data/wwwroot/default;
		index index.php index.html index.htm;
		access_log /data/logs/nginx_access/default-80.log json;
		error_log /data/logs/nginx_error/default-80.log notice;

		error_page  404              /404.html;
		error_page  500 502 503 504  /50x.html;
		location = /50x.html {
			root   /usr/share/nginx/html;
		}
		# 默认的 location 块
		location / {
			try_files $uri $uri/ =404;
		}
		# 处理 PHP 文件的 location 块
		location ~ ^/phpdir/ {
			location ~ \.php$ {
				include fastcgi_params;
				fastcgi_pass unix:/run/php/php8.3-fpm.sock;
				fastcgi_index index.php;
				fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			}
		}

		location ~ /\.ht {
		    deny  all;
		}
	}
	# Virtual Host
	include /etc/nginx/vhost/*.conf;
}

